!1 Window APIs
!3 Windows
Control Browser buttons
{{{| click the back button |
| click the refresh button |
| click the close button |
}}}
Check title of current page
{{{| check | title Of Current Page | title |
| check | title Of Current Page Is | title | true|false |
| check | does Window With Title Exist | title | true|false |
}}}
Check absolute url of current page
{{{| check | absolute Url Of Current Page | url |
| check | Absolute Url Of Current Page Is | url | true|false |
}}}
Select a window by its title
{{{| select Window With Title |title |
}}}
Check the windows with titles in the list all exist
{{{| check | do windows with titles | list | exist | true|false |
}}}
Set the focus of the selected window
{{{| set focus to currently selected window |
}}}
Maximize the current window
{{{| maximise Currently Selected Window |
}}}
Check a window with specific id exists
{{{| check | does Window With Id | id | Exist | true|false |
}}}
Open a url in a window and assign it an id
{{{| open url | url | in window and assign id |id |
}}}
Select a window based on its id
{{{| select window with id | id|
}}}
Check all windows with ids in the list exist
{{{| check | do windows with ids | list | exist | true|false |
}}}
Store all window ids in a variable
{{{| store all window ids in | var|
}}}
Select a window by its name
{{{| select Window With Name | name|
}}}
Check a window with specific name exists
{{{| check | does Window With Name | name| Exist | true|false |
}}}
Check all windows with names in the list exist
{{{| check | do windows with names |list | exist | true|false |
}}}
Store various aspects of the windows to variables
{{{| store all window names in | var |
| store all window titles in | var |
| store title of current page in | var |
| store absolute url of current page in | var |
}}}
!3 Frames
{{{| select Frame | locator |
| select Frame | locator |
}}}
!2 Examples
!3 Window based APIs
| check | title Of Current Page | Magnetic Reason |
| check | title Of Current Page Is | Magnetic Reason | true |

| check | absolute Url Of Current Page | http://localhost:8090/fitnium/testpage4api.html |
| check | Absolute Url Of Current Page Is | http://localhost:8090/fitnium/testpage4api.html | true |

| check | does Window With Title Exist | Magnetic Reason | true |
| select Window With Title | Magnetic Reason |

| set focus to currently selected window |
| maximise Currently Selected Window |

| check | does Window With Id | testpage4api | Exist | false |
| open url | testpage4api.html | in window and assign id | testpage4api |
| select window with id | testpage4api |

The next 2 API's fail because the previous API doesn't seem to assign the ID we specified

| comment |
| check | does Window With Id | testpage4api | Exist | true |
| select window with id | testpage4api |

This appears to be a defect and is being followed up on the Selenium website at the moment
Given the above API for checking the name exists, we should be able to check it

| comment |
| select Window With Name | main |
| check | does Window With Name | main | Exist | true |

Check for multiple windows

| check | do windows with ids | id1,id2,id3 | exist | false |
| check | do windows with names | name1,name2,name3| exist | false |
| check | do windows with titles | title1,title2, title3 | exist | false |

Store various aspects of the windows to variables

| store all window ids in | value1 |
| store all window names in | value2 |
| store all window titles in | value3 |
| store title of current page in | value4 |
| store absolute url of current page in | value5 |

Next three commands are the last in this screen as they mess with
the browser and eventually close it

| click the back button |
| click the refresh button |
| click the close button |







